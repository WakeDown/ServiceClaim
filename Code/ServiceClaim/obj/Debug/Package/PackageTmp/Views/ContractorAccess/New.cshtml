@using ServiceClaim.Models
@model ServiceClaim.Models.ContractorAccess
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Editor.cshtml";
}
@section PanelHead
{
    Создание доступа к личному кабинету
}
@section PanelBody
{
    @using (Html.BeginForm("New", "ContractorAccess", FormMethod.Post, new { @id = "caForm", @class = "form-horizontal", data_toggle = "validator", role = "form" }))
    {
        @*<div class="form-group">
            <label class="col-lg-3 control-label" for="ctrFind">Контрагент</label>
            <div class="col-lg-2">
                <input id="ctrFind" type="text" placeholder="поиск контрагента" class="form-control" />
                <small class="text-danger"></small>
            </div>
            <div class="col-lg-6">
                <div class="input-group" style="width: 100%">
                    <select id="ctrList" name="ctrList" class="form-control required-mark" required="required" data-error="Выберите Контрагента"></select>
                    <div class="input-group-addon" style="width: 50px">
                        <span id="ctrListCount" class="label label-info"></span>
                    </div>
                </div>
                <span class="help-block with-errors"></span>
            </div>
        </div>*@
        <div class="form-group">
            <label class="col-lg-2 control-label" for="name">ФИО подрядчика</label>
            <div class="col-lg-8">
                @Html.TextBoxFor(m => m.Name, new {id = "name", @class = "form-control required-mark", required = "required", data_error = "Введите ФИО подрядчика"})
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="email">e-mail</label>
            <div class="col-lg-8">
                @Html.TextBoxFor(m => m.Email, new { id = "email", @class = "form-control required-mark", required = "required", data_error = "Введите e-mail" })
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="org">Организация</label>
            <div class="col-lg-8">
                @Html.DropDownListFor(m=>m.OrgSid, ContractorAccess.GetOrgSelectionList(), "--выберите организацию--", new { id = "org", @class="form-control required-mark", required="required", data_error="Выберите Организацию"})
                @*<select id="org" name="org" class="form-control required-mark" required="required" data-error="Выберите Организацию"></select>*@
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div id="newOrg">
            <div class="form-group">
                <label class="col-lg-2 control-label" for="orgName">Наименование организации</label>
                <div class="col-lg-8">
                    @Html.TextBoxFor(m => m.OrgName, new { id = "orgName", @class = "form-control required-mark", required = "required", data_error = "Введите Наименование организации" })
                    <small>Кавычки и другие спецсимволы недопустимы</small>
                    <span class="help-block with-errors"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-2 control-label" for="city">Город</label>
                <div class="col-lg-8">
                    @Html.TextBoxFor(m => m.City, new { id = "city", @class = "form-control required-mark", required = "required", data_error = "Введите Город" })
                    <span class="help-block with-errors"></span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-push-2 col-lg-8">
                <button class="btn btn-success">Создать доступ</button>
                <p class="text-danger">
                    @TempData["error"]
                </p>
            </div>
        </div>
    }
}

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#newOrg').hide();
            $('#org').change(function () {
                if ($(this).find(':selected').attr('value') === 'new') {
                    $('#newOrg').show();
                } else {
                    $('#newOrg').hide();
                }
            });

            //$('caForm').keypress(function (e) {
            //    if (e.which === 13) {
            //        return false;
            //    }
            //});
            //    $('#ctrFind').keypress(function(e) {
            //        if (e.which === 13) {
            //            displayCtrs();
            //        }
            //    });
            //$('#ctrList').click(function() {
            //    $('#ctrListSelName').val($(this).val());
            //});
            //displayOrgs();
        });

        @*function displayOrgs() {
            $.ajax({
                url: '@Url.Action("GetOrgs")',
                method: 'POST',
                success: function (data) {
                    var $list = $('#org');
                    $list.find('option').remove();
                    if (data) {
                        alert(data[0]);
                        if (data.length > 0) {
                            alert(data[0].Key);
                            for (var i = 0; i < data.length; i++) {
                                var ctr = data[i];
                                $list.append($("<option></option>").attr("value", ctr.Key).text(ctr.Value));
                            }
                        }
                    }
                },
                error: function (data) {
                    alert(data.error);
                }
            });
        }*@

        @*function displayCtrs() {
            var ctrName = $('#ctrFind').val();

            if (ctrName === '' && ctrId === null && contId === null && devId === null) {
                $('#ctrList').find('option').remove();
                return;
            }
            $('#ctrListCount').text('');
            $('#ctrFind').prop("disabled", true);
            $.ajax({
                url: '@Url.Action("GetCtors")',
                method: 'POST',
                data: { contractorName: ctrName },
                success: function(data) {
                    var $ctrList = $('#ctrList');
                    $ctrList.find('option').remove();

                    if (data) {
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                var ctr = data[i];
                                $ctrList.append($("<option></option>").attr("value", ctr.Id).text(ctr.Name));
                            }
                            $('#ctrListCount').text(data.length);
                        } else {
                            $('#ctrListCount').text(0);
                        }
                    } else {
                        $('#ctrListCount').text(0);
                    }

                    $('#ctrFind').prop("disabled", false);
                },
                error: function() {
                    $('#ctrFind').prop("disabled", false);
                }
            });
        }*@
    </script>
}
@using ServiceClaim.Objects
@model ServiceClaim.Models.Claim
@{
    ViewBag.Title = "Новая заявка";
    Layout = "~/Views/Shared/_Editor.cshtml";
}

@section PanelHead
{
    Новая заявка
}
@section PanelBody
{
    <div id="tabs" class="row">
        <div class="col-lg-6 col-lg-push-2 col-md-10 col-md-push-1">
            <div class="row">
                <div class="col-lg-6 col-md-6">
                    <a id="tabIncident" class="tab tab-danger active">Новая заявка</a>
                </div>
                @*<div class="col-lg-6">
                    <a id="tabCartridges" class="tab tab-warning">Заказ</a>
                </div>*@
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 col-lg-push-2 col-md-10 col-md-push-1">
            @*<ul class="nav nav-tabs" role="tablist" style="display: none !important">
                    <li role="presentation" class="active"><a href="#incident" aria-controls="incident" role="tab" data-toggle="tab" class="tab-danger">Инцидент</a></li>
                    <li role="presentation"><a href="#cartridges" aria-controls="cartridges" role="tab" data-toggle="tab">Картриджи</a></li>
                </ul>*@
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active panel-danger light" id="incidentForm">
                    <div class="panel-body">
                        @using (Html.BeginForm("New", "Claim", FormMethod.Post, new { @id = "clForm", @class = "form-horizontal" }))
                        {
                            <input type="hidden" value="INCIDENT" id="ClaimTypeSysName" name="ClaimTypeSysName" />
                            <div class="form-group">
                                <label class="col-lg-2 col-md-2 control-label" for="ctrFind">Клиент</label>
                                <div class="col-lg-3 col-md-3">
                                    <div class="input-group">
                                        <input id="ctrFind" type="text" placeholder="поиск клиента" class="form-control" autocomplete="off" name="ctrFind" value="@Model.ctrFind" />
                                        <span class="input-group-btn">
                                            <button class="btn btn-default" type="button" id="ctrSearch"><i class="fa fa-search"></i></button>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-lg-7 col-md-7">
                                    <div class="input-group" style="width: 100%">
                                        <div class="input-group-addon" style="width: 50px">
                                            <span id="ctrListCount" class="label label-info"></span>
                                        </div>
                                        <div id="ctrSpinner" class="spinner on-input">
                                            <i class="fa fa-spinner fa-spin"></i>
                                        </div>
                                        <select id="ctrList" name="ctrList" class="form-control required-mark" required="required" data-error="Выберите Контрагента"></select>
                                    </div>
                                </div>
                                @*<div class="col-lg-1"><span class="help-block with-errors"></span></div>*@
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 col-md-2 control-label" for="addrFind">Адрес</label>
                                <div class="col-lg-3 col-md-3">
                                    <div class="input-group">
                                        <input id="addrFind" type="text" placeholder="поиск адреса" class="form-control" autocomplete="off" name="addrFind" value="@Model.addrFind" />
                                        <span class="input-group-btn">
                                            <button class="btn btn-default" type="button" id="addrSearch"><i class="fa fa-search"></i></button>
                                        </span>
                                    </div>

                                </div>
                                <div class="col-lg-7 col-md-7">
                                    <div class="input-group" style="width: 100%">
                                        <div class="input-group-addon" style="width: 50px">
                                            <span id="addrListCount" class="label label-info"></span>
                                        </div>
                                        <span id="addrSpinner" class="spinner on-input"><i class="fa fa-spinner fa-spin"></i></span>
                                        <select id="addrList" name="addrList" class="form-control required-mark" required="required" data-error="Выберите Адрес"></select>
                                    </div>
                                </div>
                                @*<div class="col-lg-1"><span class="help-block with-errors"></span></div>*@
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 col-md-2 control-label" for="contFind">Договор</label>
                                <div class="col-lg-3 col-md-3">
                                    <div class="input-group">
                                        <input id="contFind" type="text" placeholder="поиск договора" class="form-control" autocomplete="off" name="contFind" value="@Model.contFind" />
                                        <span class="input-group-btn">
                                            <button class="btn btn-default" type="button" id="contSearch"><i class="fa fa-search"></i></button>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-lg-7 col-md-7">
                                    <div class="input-group" style="width: 100%">
                                        <div class="input-group-addon" style="width: 50px">
                                            <span id="contListCount" class="label label-info"></span>
                                        </div>
                                        <span id="contSpinner" class="spinner on-input"><i class="fa fa-spinner fa-spin"></i></span>
                                        <select id="contList" name="contList" class="form-control required-mark" required="required" data-error="Выберите Договор"></select>
                                        <div class="input-group-addon" style="width: 100px">
                                            <input id="contUnknown" name="ContractUnknown" type="checkbox" @(Model.ContractUnknown? "checked": "") />&nbsp; неизвестен
                                        </div>
                                    </div>
                                </div>
                                @*<div class="col-lg-1"><span class="help-block with-errors"></span></div>*@
                            </div>
                            <div class="form-group" id="devGroup">
                                <label class="col-lg-2 col-md-2 control-label" for="devFind">Аппарат</label>
                                <div class="col-lg-3 col-md-3">
                                    <p class="no-marg-bot">
                                        <div class="input-group">
                                            <input id="devFind" type="text" placeholder="поиск аппарата" class="form-control" autocomplete="off" name="devFind" value="@Model.devFind" />
                                            <span class="input-group-btn">
                                                <button class="btn btn-default" type="button" id="devSearch"><i class="fa fa-search"></i></button>
                                            </span>
                                        </div>
                                        <div class="input-group">
                                            <input id="devSnFind" type="text" placeholder="cерийный номер" class="form-control" />
                                            <span class="input-group-btn">
                                                <button class="btn btn-default" type="button" id="devSnSearch"><i class="fa fa-search"></i></button>
                                            </span>
                                        </div>
                                        
                                    </p>
                                </div>
                                <div class="col-lg-7 col-md-7">
                                    <div class="input-group" style="width: 100%">
                                        <div class="input-group-addon" style="width: 50px">
                                            <span id="devListCount" class="label label-info"></span>
                                        </div>
                                        <span id="devSpinner" class="spinner on-input"><i class="fa fa-spinner fa-spin"></i></span>
                                        <select id="devList" name="devList" class="form-control required-mark" required="required" data-error="Выберите Аппарат"></select>
                                        <input id="devListData" type="hidden" value=""/>
                                        <div class="input-group-addon" style="width: 100px">
                                            <input id="devUnknown" value="DeviceUnknown" type="radio" name="Device" @(Model.DeviceUnknown ? "checked" : "")/>&nbsp; неизвестен
                                            <input id="devCollective" value="DeviceCollective" type="radio" name="Device" @(Model.DeviceCollective ? "checked" : "")/>&nbsp; массовая
                                        </div>
                                    </div>
                                    <div id="devCount4ClaimContainer" style="display: none">
                                        <div class="pull-right">
                                            <div class="text-nowrap">
                                                <input id="devCount4Claim" name="devCount4Claim" type="text" class="form-control" value="1" style="width: 110px"/>
                                                <span>Количество устройств</span>
                                            </div>
                                        </div>
                                    </div>
                                    <p>
                                        <div id="vendorFilterCntnr"></div>
                                    </p>
                                </div>
                                @*<div class="col-lg-1"><span class="help-block with-errors"></span></div>*@
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 col-md-2 control-label" for="devClientSdFind">№ SD клиента</label>
                                <div class="col-lg-3 col-md-3">
                                    <div class="input-group">
                                        <input id="devClientSdFind" name="client_sd_num" type="text" placeholder="№ SD клиента" class="form-control" autocomplete="off" value="@Model.ClientSdNum" />
                                        <span class="input-group-btn">
                                            <button class="btn btn-default" type="button" id="clientSdsearch"><i class="fa fa-search"></i></button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-push-2 col-lg-10 col-md-10 col-md-push-2">
                                    <blockquote class="bg-info no-marg-bot" id="activeClaimsInfo">&nbsp;</blockquote>
                                    <div id="claimsContainer" class="row">
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 col-md-2 control-label" for="descr"></label>
                                <div class="col-lg-10 col-md-10">
                                    <input id="contactName" name="contactName" type="text" placeholder="Контактное лицо" class="form-control required-mark" required="required" autocomplete="off"  value="@Model.ContactName" />
                                    <input id="contactPhone" name="contactPhone" type="text" placeholder="Контактный номер телефона" class="form-control required-mark" required="required" autocomplete="off" value="@Model.ContactPhone" />
                                    <textarea id="descr" name="descr" type="text" placeholder="Что случилось?" class="form-control required-mark" required="required" rows="2" data-error="Введите описание заявки" autocomplete="off">@Model.Descr</textarea>
                                </div>
                                @*<div class="col-lg-1"><span class="help-block with-errors"></span></div>*@
                            </div>
                            @*<div class="form-group">
                                <label class="col-lg-2 control-label" for="client_sd_num">№ SD заказчика</label>
                                <div class="col-lg-4">
                                    <input id="client_sd_num" name="client_sd_num" type="text" class="form-control" data-error="Введите № SD заказчика" />
                                </div>
                            </div>*@
                            <div class="form-group">
                                <div class="col-lg-push-2 col-lg-5 col-md-push-2 col-md-5">
                                    @*<a type="submit" class="btn btn-primary btn-sm" href="#"><i class="fa fa-save"></i>&nbsp;добавить</a>*@
                                    @*<a id="save" class="btn btn-success"><i class="fa fa-save"></i>&nbsp;сохранить</a>*@
                                    <button id="save" type="submit" class="btn btn-success"><i class="fa fa-save"></i>&nbsp;сохранить</button>
                                    <a class="btn btn-default" href="@Url.Action("New")"><i class="fa fa-refresh"></i>&nbsp;очистить</a>
                                    @if (TempData["error"] != null)
                                    {
                                        <blockquote class="alert-danger">
                                            @TempData["error"]
                                        </blockquote>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
                @*<div role="tabpanel" class="tab-pane bg-warning" id="cartridges">
                    <div class="panel-body">
                    </div>
                </div>*@
            </div>
        </div>
    </div>
}

@section scripts
{
    <script type="text/javascript">
        var updCtorList = false;
        var updContList = false;
        $(document).ready(function() {
            $('#addrFind').keypress(function(e) {
                if (e.which !== 13) return;
                addrFind(e);
            });
            $('#addrSearch').click(addrFind);

            $('#ctrFind').keypress(function(e) {
                if (e.which !== 13) return;
                ctrFind(e);
            });
            $('#ctrSearch').click(ctrFind);

            $('#contFind').keypress(function(e) {
                if (e.which !== 13) return;
                contFind();
            });
            $('#contSearch').click(contFind);

            $('#devFind').keypress(function(e) {
                if (e.which !== 13) return;
                devFind();
            });
            $('#devSearch').click(devFind);
            $('#devSnFind').keypress(
                function(e) {
                    if (e.which !== 13) return;
                    devFind();
                }
            );
            $('#devSnSearch').click(devFind);
            $('#devClientSdFind').keypress(function(e) {
                if (e.which !== 13) return;
                showClaims();
            });
            $('#clientSdsearch').click(showClaims);
            $('#ctrList').change(function() {
                updateLists(false, true, true);
            });
            $('#addrList').change(function() {
                updateLists(false, true, true);
            });
            $('#contList').change(setContDev);
            $('#devList').change(function() {
                updateLists(true, true, false);
                showClaims();
            });
            $('#devSnFind').focus();
            //$('#ctrFind').focus();

            $('#contUnknown').click(function() {
                var checked = $(this).is(':checked');
                contUnknownDisplay(checked);
                updateLists(true, true, true);
            });

            $('input[name="Device"]').click(function() {
                if ($(this).attr('previousvalue') == 'true') {
                    $(this).attr('checked', false);
                } else {
                    $('input[name="Device"]').attr('previousvalue', false);
                }
                $(this).attr('previousvalue', $(this).is(':checked'));

                devUnknownClick();
                updateLists(true, true, true);
            });

            //$('#devUnknown').click(function () {


            //    $(this).attr('previousValue', $(this).attr('checked'));

            //    devUnknownClick();
            //    updateLists(true, true, true);
            //});
            
            //////$("input[name=Device]:radio").change(function () {
            //////    if ($('#devCollective').is(':checked')) {
            //////        $('#devCount4ClaimContainer').show();
            //////        $('#devCount4Claim').select();
            //////    } else {
            //////        $('#devCount4ClaimContainer').hide();
            //////    }
            //////});
            $('#tabIncident').click(function() {
                //$('.nav-tabs a[href="#incident"]').tab('show');
                var $cont = $('#incidentForm');
                $cont.addClass('panel-danger');
                $cont.removeClass('panel-warning');
                $('.tab', '#tabs').removeClass('active');
                $(this).addClass('active');
                $('#devGroup').show();
                $('#devList').prop('required', true);
                $('#ClaimTypeSysName').val('INCIDENT');
            });
            $('#tabCartridges').click(function() {
                //$('.nav-tabs a[href="#cartridges"]').tab('show');
                var $cont = $('#incidentForm');
                $cont.removeClass('panel-danger');
                $cont.addClass('panel-warning');
                $('.tab', '#tabs').removeClass('active');
                $(this).addClass('active');
                $('#devGroup').hide();
                $('#devList').prop('required', false);
                $('#ClaimTypeSysName').val('COLLECTIVE');
            });


        });


        function contFind(e) {
            e.preventDefault();
            displayCtrs();
            displayConts();
            $('#contList').focus();
        }

        function contUnknownDisplay(unknown) {
            $('#contList').prop('disabled', unknown);
            var $elem = $('#contUnknown');


            if (unknown == true) {
                if (!($('[name="Device"]:checked').length > 0)) {
                    $('#devUnknown').prop('checked', true);
                    $('input[name="Device"]').attr('previousvalue', true);
                    devUnknownDisplay(true);
                }
                $elem.parent().addClass('bg-warning-imp');

            } else {
                $elem.parent().removeClass('bg-warning-imp');
                $elem.prop('checked', false);
            }
        }

        function devUnknownClick() {

            //var $elem = $('#devUnknown');
            //$elem.attr('previousValue', $elem.attr('checked'));
            //var checked = $elem.is(':checked');

            var checked = $('[name="Device"]:checked').length > 0;
            devUnknownDisplay(checked);
        }

        function devUnknownDisplay(unknown) {
            var $elem = $('#devUnknown');
            $('#devList').prop('disabled', unknown);
            if (unknown) {
                $elem.parent().addClass('bg-warning-imp');
            } else {
                contUnknownDisplay(false);
                $elem.parent().removeClass('bg-warning-imp');
            }
        }

        function devFind(e) {

            $('#ctrFind').text('');
            $('#contFind').text('');
            $('#devFind').text('');
            displayDevs(true);
            $('#devList').focus();
        }

        //Список активных заявок
        function showClaims() {
            $('#claimsContainer').empty();
            var $info = $('#activeClaimsInfo');
            $info.removeClass('bg-info');
            $info.removeClass('bg-danger');
            $info.removeClass('bg-success');
            $info.addClass('bg-info');
            $info.text('Идет поиск активных заявок...');
            $('#claimsContainer').hide();
            showSpinnerAppend($info);
            var devId = $('#devList').val();
            var clientSdNum = $('#devClientSdFind').val();
            if (clientSdNum == '' && (devId == null || devId <= 0)) {
                $info.removeClass('bg-info');
                $info.removeClass('bg-danger');
                $info.removeClass('bg-success');
                $info.addClass('bg-info');
                $info.html('&nbsp;');
                hideSpinner($('#claimsContainer'));
                return;
            }
            $.ajax({
                url: '@Url.Action("GetClaimList")?idDevice=' + devId + '&clientSdNum=' + clientSdNum + '&serialNum=',
                method: 'POST',
                success: function(data) {
                    $('#claimsContainer').empty();
                    if (data.List.length > 0) {
                        $info.removeClass('bg-info');
                        $info.removeClass('bg-danger');
                        $info.removeClass('bg-success');
                        $info.addClass('bg-danger');
                        $info.text('Найдено активных заявок - ' + data.List.length);
                        $info.append('&nbsp;&nbsp;<a class="btn btn-default btn-xs" id="showActiveClaims">показать</a>');
                        for (var i = 0; i < data.List.length; i++) {
                            var item = data.List[i];
                            $('#claimsContainer').append('<div class="col-lg-3"><a class="issue-item-sm" style="border: 1px solid #' + item.State.BackgroundColor + '; background-color: #' + item.State.BackgroundColor + '; color: #' + item.State.ForegroundColor + '" target="_blank" href="@Url.Action("Index")/' + item.Id + '">№' + item.Id + ' (кл№' + item.ClientSdNum + ')<br /><small>Создано ' + item.DateCreateStr + '</small><br />' + item.State.Name + '<br /><small>' + item.DateStateChangeStr + '</small></a></div>');
                        }
                        $('#showActiveClaims').click(function() {
                            $(this).remove();
                            $('#claimsContainer').show();
                        });
                    } else {
                        $info.removeClass('bg-info');
                        $info.removeClass('bg-danger');
                        $info.removeClass('bg-success');
                        $info.addClass('bg-success');
                        $info.text('Активных заявок для выбранного аппарата не найдено');
                    }
                    hideSpinner($info);
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    BootstrapDialog.show({
                        type: 'type-danger',
                        title: 'Ошибка!',
                        message: xhr.responseText
                    });
                    $('#claimsContainer').empty();
                    hideSpinner($('#claimsContainer'));
                }
            });
        }

        //function fidLists(e) {
        //    if (e.which !== 13) return;
        //    //var devName = $('#devFind').val();
        //    //var contName = $('#contFind').val();
        //    //var ctrName = $('#ctrFind').val();
        //    //var devId = $('#devList').val();
        //    //var contId = $('#contList').val();
        //    //var ctrId = $('#ctrList').val();

        //    //if (devName === '' && contName === '' && ctrName === '') return;
        //    //displayCtrs(ctrId, ctrName, contId, contName, devId, devName);
        //    //displayConts(ctrId, ctrName, contId, contName, devId, devName);
        //    //displayDevs(ctrId, ctrName, contId, contName, devId, devName);

        //    e.preventDefault();
        //}

        function setContDev() {
            if ($('#ClaimTypeSysName').val() != 'CARTRIDGE') {
                $('#devList').find('option').remove();
                $('#devListCount').text(0);
                displayDevs(false);
            }
        }

        function addrFind(e) {
            $('#contList').find('option').remove();
            $('#devList').find('option').remove();
            $('#devListCount').text(0);
            $('#contListCount').text(0);
            $('#addrListCount').text(0);
            $('#contFind').val('');
            $('#devFind').val('');
            displayAddrs(true);
            //e.preventDefault();
            $('#addrList').focus();
        }

        function ctrFind(e) {
            $('#contList').find('option').remove();
            $('#devList').find('option').remove();
            $('#devListCount').text(0);
            $('#contListCount').text(0);
            $('#contFind').val('');
            $('#devFind').val('');
            displayCtrs(true);
            //e.preventDefault();
            $('#ctrList').focus();
        }

        //function setCtrContNdev() {
        //    //$('#contList').find('option').remove();
        //    //$('#devList').find('option').remove();
        //    //$('#devListCount').text(0);
        //    //$('#conListCount').text(0);
        //    //displayAddrs();
        //    //displayConts();
        //    //displayDevs(false);
        //    updateLists(false, true, true);
        //}

        function updateLists(addr, cont, dev, ctr) {
            if (addr == true) {
                $('#addrList').find('option').remove();
                $('#addrListCount').text(0);
                displayAddrs(false);
            }
            if (cont == true) {
                $('#contList').find('option').remove();
                $('#conListCount').text(0);
                displayConts(false);
            }
            if (dev == true) {
                $('#devList').find('option').remove();
                $('#devListCount').text(0);
                displayDevs(false);
            }
            if (ctr == true) {
                $('#ctrList').find('option').remove();
                $('#ctrListCount').text(0);
                displayCtrs(false);
            }

            showClaims();
        }

        function saveDisplay(display) {
            display = checkSaveButtonDisplay();

            if (display == false) {
                $('#save').prop('disabled', true);
                setTimeout(saveDisplay, 1000);
            } else {
                $('#save').prop('disabled', false);

            }
        }

        function checkSaveButtonDisplay() {
            var ctr = $('#ctrList').val();
            if (ctr == undefined || ctr <= 0) {
                return false;
            }
            var addr = $('#addrList').val();
            if (addr == undefined || addr == '') {
                return false;
            }

            var cont = $('#contList').val();
            var contUnknown = $('#contUnknown').is(':checked');
            if (contUnknown == false && (cont == undefined || cont <= 0)) {
                return false;
            }

            var dev = $('#devList').val();
            var devUnknownOrCollective = $('[name="Device"]:checked').length > 0;
            if (devUnknownOrCollective == false && (dev == undefined || dev <= 0)) {
                return false;
            }

            return true;
        }

        function displayDevs(updateCtrNcontLists) {
            var ctrName = $('#ctrFind').val();
            var ctrId = $('#ctrList').val();
            var contName = $('#contFind').val();
            var contId = $('#contList').val();
            var devId = $('#devList').val();
            var devName = $('#devFind').val();
            var serialNum = $('#devSnFind').val();
            var devUnknown = $('[name="Device"]:checked').length > 0;
            if (devUnknown == undefined) devUnknown = false;
            if (devUnknown) devId = null;
            var contUnknown = $('#contUnknown').is(':checked');
            if (contUnknown == undefined) contUnknown = false;
            if (contUnknown) contId = null;

            if (devUnknown == true || ((ctrId === null || ctrId == 0) && (contId === null || contId == 0) && devName === '' && serialNum === '')) {
                $('#devList').find('option').remove();
                $('#vendorFilterCntnr').find('.btn').remove();
                return;
            }
            $('#devSpinner').addClass('active');
            $('#devListCount').text('');
            saveDisplay(false);
            $.ajax({
                url: '@Url.Action("GetDevices")',
                method: 'POST',
                data: { idContractor: ctrId, contractorName: ctrName, idContract: contId, contractNumber: contName, idDevice: devId, deviceName: devName, serialNum: serialNum },
                success: function(data) {
                    var $devList = $('#devList');
                    var $vFltrCntnr = $('#vendorFilterCntnr');
                    $devList.find('option').remove();
                    $vFltrCntnr.find('.btn').remove();
                    if (data) {
                        if (data.Vendors.length > 0) {
                            $('#devListData').val(JSON.stringify(data.Devices));
                            $vFltrCntnr.append($("<span name='filter-vendor' class='btn btn-primary btn-xs' vlaue=''></span>").text('все'));
                            for (var i = 0; i < data.Vendors.length; i++) {
                                var vend = data.Vendors[i];
                                $vFltrCntnr.append($("<span name='filter-vendor' class='btn btn-default btn-xs' vlaue='" + vend + "'></span>").text(vend));
                            }
                            $("[name='filter-vendor']").click(filterVendor);
                        }

                        if (data.Devices.length > 0) {
                            //for (var i = 0; i < data.Devices.length; i++) {
                            //    var dev = data.Devices[i];
                            //    $devList.append($("<option></option>").attr("value", dev.Id).text(dev.SelListName));
                            //}
                            filterDeviceList('', false);
                            showClaims();
                        } else {
                            $('#devList').append($("<option>аппарат не найден</option>").attr("value", 0));
                            $('#devListCount').text(0);
                        }
                        //else {
                        //    var help = $ctrList.next('small');
                        //    help.text('ничего не найдено');
                        //}

                        if (updateCtrNcontLists === true) {
                            if (devName != null || serialNum != null) {
                                updateLists(true, true, true, true);
                            } else {
                                updateLists(false, true, true, false);
                            }
                        }
                    } else {
                        $('#devList').append($("<option>аппарат не найден</option>").attr("value", 0));
                        $('#devListCount').text(0);
                    }
                    $('#devSpinner').removeClass('active');
                    saveDisplay(true);
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    BootstrapDialog.show({
                        type: 'type-danger',
                        title: 'Ошибка!',
                        message: xhr.responseText
                    });
                    $('#devSpinner').removeClass('active');
                    saveDisplay(true);
                }
            });
            //$(this).blur();
            //e.preventDefault();

        }

        function filterVendor(updateLists) {
            $("[name='filter-vendor']").removeClass('btn-primary').addClass('btn-default');
            $(this).addClass('btn-primary');
            var vendor = $(this).attr('vlaue');
            filterDeviceList(vendor, updateLists);
        }

        function filterDeviceList(vendor, updateLists) {
            var data = $.parseJSON($('#devListData').val());
            var $devList = $('#devList');
            $devList.find('option').remove();
            var cnt = 0;
            for (var i = 0; i < data.length; i++) {
                var dev = data[i];
                if (vendor === '' || dev.ExtendedName.indexOf(vendor) >= 0) {
                    $devList.append($("<option></option>").attr("value", dev.Id).text(dev.ExtendedName));
                    cnt++;
                }
            }
            //displayDevs(false);
            $('#devListCount').text(cnt);
            if (updateLists == true) {
                $('#devList').change();
            }
        }

        function setSdNumRequiredOrNot() {
            var sdrequired = $('#contList :selected').attr('sdrequired');
            var $sdnum = $('#devClientSdFind');
            if (sdrequired === "true") {
                $sdnum.prop('required', true);
                $sdnum.addClass('required-mark');
            } else {
                $sdnum.prop('required', false);
                $sdnum.removeClass('required-mark');
            }
        }

        function displayConts(updateLists) {
            var ctrName = $('#ctrFind').val();
            var ctrId = $('#ctrList').val();
            var contName = $('#contFind').val();
            var contId = $('#contList').val();
            var devId = $('#devList').val();
            var devName = $('#devFind').val();
            var addrStrId = $('#addrList').val();
            var devUnknown = $('[name="Device"]:checked').length > 0;
            if (devUnknown == undefined) devUnknown = false;
            if (devUnknown) devId = null;
            var contUnknown = $('#contUnknown').is(':checked');
            if (contUnknown == undefined) contUnknown = false;
            if (contUnknown) contId = null;

            if (ctrId == 0 || devId == 0) return;

            if (contUnknown == true || ((ctrName === '' || ctrId === null) && (contName === '' || contId === null) && devId === null)) {
                $('#contList').find('option').remove();
                setSdNumRequiredOrNot();
                return;
            }
            $('#contSpinner').addClass('active');
            $('#contListCount').text('');
            saveDisplay(false);
            $.ajax({
                url: '@Url.Action("GetConts")',
                method: 'POST',
                data: { idContractor: ctrId, contractorName: ctrName, idContract: contId, contractNumber: contName, idDevice: devId, deviceName: devName, addrStrId: addrStrId },
                success: function(data) {
                    if (data) {
                        if (data.length > 0) {
                            var contList = $('#contList');
                            contList.find('option').remove();
                            if (data.length > 1) {
                                contList.append($("<option></option>").attr("value", null).text('--все--'));
                            }
                            for (var i = 0; i < data.length; i++) {
                                var cont = data[i];
                                contList.append($("<option></option>").attr("value", cont.Id).attr('sdrequired', cont.ClientSdNumRequired).text(cont.Number));
                            }
                            $('#contListCount').text(data.length);
                        } else {
                            $('#contList').find('option').remove();
                            $('#contList').append($("<option>договор не найден</option>").attr("value", 0));
                            $('#contListCount').text(0);
                        }
                    } else {
                        $('#contList').find('option').remove();
                        $('#contList').append($("<option>договор не найден</option>").attr("value", 0));
                        $('#contListCount').text(0);
                    }
                    $('#contSpinner').removeClass('active');
                    setSdNumRequiredOrNot();
                    saveDisplay(true);
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    BootstrapDialog.show({
                        type: 'type-danger',
                        title: 'Ошибка!',
                        message: xhr.responseText
                    });
                    $('#contSpinner').removeClass('active');
                    saveDisplay(true);
                }
            });
        }

        function displayAddrs(updateLists) {

            var ctrName = $('#ctrFind').val();
            var ctrId = $('#ctrList').val();
            var contName = $('#contFind').val();
            var contId = $('#contList').val();
            var devId = $('#devList').val();
            var devName = $('#devFind').val();
            var addrName = $('#addrFind').val();
            var devUnknown = $('[name="Device"]:checked').length > 0;
            if (devUnknown == undefined) devUnknown = false;
            if (devUnknown) devId = null;
            var contUnknown = $('#contUnknown').is(':checked');
            if (contUnknown == undefined) contUnknown = false;
            if (contUnknown) contId = null;

            if (addrName === '' && ctrId === null && contId === null && devId === null) {
                $('#ctrList').find('option').remove();
                return;
            }
            $('#addrSpinner').addClass('active');
            $('#addrListCount').text('');
            $('#addrListCount').text('');
            saveDisplay(false);
            $.ajax({
                url: '@Url.Action("GetAddrs")',
                method: 'POST',
                data: { idContractor: ctrId, idContract: contId, idDevice: devId, addrName: addrName },
                success: function(data) {
                    var $select = $('#addrList');
                    $select.find('option').remove();

                    if (data) {
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                var item = data[i];
                                $select.append($("<option></option>").attr("value", item.Id).text(item.Name));
                            }
                            $('#addrListCount').text(data.length);
                        } else {
                            $('#addrList').append($("<option>адрес не найден</option>").attr("value", 0));
                            $('#addrListCount').text(0);
                        }

                        if (updateLists == true) {

                            updateLists(false, true, true);
                        }
                        //else {
                        //    var help = $ctrList.next('small');
                        //    help.text('ничего не найдено');
                        //}
                    } else {
                        $('#addrList').append($("<option>адрес не найден</option>").attr("value", 0));
                        $('#addrListCount').text(0);
                    }
                    $('#addrSpinner').removeClass('active');
                    saveDisplay(true);
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    BootstrapDialog.show({
                        type: 'type-danger',
                        title: 'Ошибка!',
                        message: xhr.responseText
                    });
                    $('#addrSpinner').removeClass('active');
                    saveDisplay(true);
                }
            });
        }

        function displayCtrs(updateConNdevLists) {

            var ctrName = $('#ctrFind').val();
            var ctrId = $('#ctrList').val();
            var contName = $('#contFind').val();
            var contId = $('#contList').val();
            var devId = $('#devList').val();
            var devName = $('#devFind').val();
            var devUnknown = $('[name="Device"]:checked').length > 0;
            if (devUnknown == undefined) devUnknown = false;
            if (devUnknown) devId = null;
            var contUnknown = $('#contUnknown').is(':checked');
            if (contUnknown == undefined) contUnknown = false;
            if (contUnknown) contId = null;

            if ((devId == null || contId == null) && ctrName == '') {
                setTimeout(function() { displayCtrs(false); }, 500);
                return;
            }

            if (ctrName === '' && ctrId === null && contId === null && devId === null) {
                $('#ctrList').find('option').remove();
                return;
            }

            $('#ctrSpinner').addClass('active');
            $('#ctrListCount').text('');
            saveDisplay(false);
            $.ajax({
                url: '@Url.Action("GetCtors")',
                method: 'POST',
                data: { idContractor: ctrId, contractorName: ctrName, idContract: contId, contractNumber: contName, idDevice: devId, deviceName: devName },
                success: function(data) {
                    var $ctrList = $('#ctrList');
                    $ctrList.find('option').remove();

                    if (data) {
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                var ctr = data[i];
                                $ctrList.append($("<option></option>").attr("value", ctr.Id).text(ctr.Name));
                            }
                            $('#ctrListCount').text(data.length);
                        } else {
                            $('#ctrList').append($("<option>клиент не найден</option>").attr("value", 0));
                            $('#ctrListCount').text(0);
                        }

                        if (updateConNdevLists == true) {
                            updateLists(true, true, true, false);
                        }
                        //else {
                        //    var help = $ctrList.next('small');
                        //    help.text('ничего не найдено');
                        //}
                    } else {
                        $('#ctrList').append($("<option>клиент не найден</option>").attr("value", 0));
                        $('#ctrListCount').text(0);
                    }
                    $('#ctrSpinner').removeClass('active');
                    saveDisplay(true);
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    BootstrapDialog.show({
                        type: 'type-danger',
                        title: 'Ошибка!',
                        message: xhr.responseText
                    });
                    $('#ctrSpinner').removeClass('active');
                    saveDisplay(true);
                }
            });
        }
    </script>
}

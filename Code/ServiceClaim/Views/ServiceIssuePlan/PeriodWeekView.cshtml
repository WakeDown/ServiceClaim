@using ServiceClaim.Models
@model IEnumerable<ServiceClaim.Models.ServiceIssuePeriodItem>

@{
    var monthes = ServiceIssuePlan.GroupByMonthes(Model);
    int mColLenght = 12 / monthes.Count();
    //int rowWidth = Model.Count()*240;

}

@if (Model.Any())
{
    @*<div class="row" style="width: @(rowWidth)px !important">*@
    <div class="row">
        @foreach (var mth in monthes)
        {
            <div class="col-lg-@mColLenght">
                <span class="h3">@mth.Date.ToString("MMMM yyyy")</span>
                <span>
                    <input type="radio" name="issuesPlanType" value="city" checked="checked" />&nbsp;по городам
                    <input type="radio" name="issuesPlanType" value="client" />&nbsp;по клиентам
                    <input type="radio" name="issuesPlanType" value="engeneer" />&nbsp;по инженерам
                </span>
                <div>
                    @{
                        int pColLenght = 12 / mth.Periods.Count();
                    }
                    @foreach (var period in mth.Periods)
                    {
                        <div class="col-lg-@pColLenght period-container nomargin nopadding" id="period-container-@period.IdValue" name="period-container">
                            <h5 name="periodTitle" value="@period.ListValue" idval="@period.IdValue" class="cursor-pointer period-title nomargin">@period.ListName <span class="label label-info label-as-badge">@period.DaysDiff дн.</span></h5>

                            @*@{
                                    var issueList = period.GetServiceIssueList();
                                }*@
                            <div id="periodContainer-@period.IdValue" name="period-container" std="@period.StartDate" edt="@period.EndDate" pid="@period.IdValue">
                                @*@if (issueList.Any())
                                    {
                                        foreach (var issue in issueList)
                                        {
                                            @Html.Partial("ServiceIssuePlanItem", issue)
                                        }
                                    }*@
                            </div>
                        </div>
                    }
                </div>
            </div>
                        }
    </div>
                        }

<script type="text/javascript">
    $(function () {
        $('[name="issuesPlanType"]').click(loadPlanIssues);
        $('[name="periodTitle"]').click(function () {
            var val = $(this).attr('value');
            $('#selPeriod').val(val);
            var idval = $(this).attr('idval');
            $('[name="period-container"]').removeClass('selected');
            $('#period-container-' + idval).addClass('selected');
            selPeriodIdVal = idval;
        });

        loadPlanIssues();
    });
    
    var selPeriodIdVal = '';

    function updateSelectedPeriod() {
        loadPeriodPlanIssues('periodContainer-' + selPeriodIdVal);
    }

    function loadPlanIssues() {
        var periodArr = $('[name="period-container"]');
        for (var i = 0; i < periodArr.length; i++) {
            var pid = $(periodArr[i]).attr('pid');
            loadPeriodPlanIssues('periodContainer-' + pid);
        }
    }

    function loadPeriodPlanIssues(contId) {
        var issuesPlanType = $('[name="issuesPlanType"]:checked').val();
        var $cont = $('#' + contId);
        var startDate = $cont.attr('std');
        var endDate = $cont.attr('edt');
        $cont.html('');
        showSpinnerAppend($cont);
        var engSid = getEngeneerSelectedValues();
        if (issuesPlanType == 'city') {
            $.ajax({
                url: '@Url.Action("GetPlanServiceIssueCitiesList")',
                method: 'POST',
                data: { startDate: startDate, endDate: endDate, engeneerSid: engSid },
                success: function (data) {
                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            var item = data[i];
                            var htmlItem = '<div name="issueItemCity" sdt="' + startDate + '" edt="' + endDate + '" cid="' + item.Id + '" class="issue-plan-item city"><div class="h5 margin-sm pull-left">' + item.ShortName + '</div><div class="pull-right label label-primary label-as-badge">' + item.IssuesCount + '</div><div name="issueItemCityAddress"></div></div>';
                            $cont.append(htmlItem);
                        }
                        $('[name="issueItemCity"]', $cont).click(loadCityAddressList);
                    } else {
                        $cont.append('пусто');
                    }
                    hideSpinner($cont);
                }
                ,
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert(xhr.responseText);
                    hideSpinner($cont);
                }
            });
        }
        else if (issuesPlanType == 'client') {
            $.ajax({
                url: '@Url.Action("GetPlanServiceIssueClientList")',
                method: 'POST',
                data: { startDate: startDate, endDate: endDate, engeneerSid: engSid },
                success: function (data) {
                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            var item = data[i];
                            var htmlItem = '<div name="issueItem" cid="' + item.Id + '" class="issue-plan-item"><div class="h5 margin-sm pull-left">' + item.Name + '</div><div class="pull-right label label-primary label-as-badge">' + item.IssuesCount + '</div></div>';
                            $cont.append(htmlItem);
                        }
                    } else {
                        $cont.append('пусто');
                    }
                    hideSpinner($cont);
                }
                ,
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert(xhr.responseText);
                    hideSpinner($cont);
                }
            });
        }
        else if (issuesPlanType == 'engeneer') {
            $.ajax({
                url: '@Url.Action("GetPlanServiceIssueEngeneerList")',
                method: 'POST',
                data: { startDate: startDate, endDate: endDate, engeneerSid: engSid },
                success: function (data) {
                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            var item = data[i];
                            var htmlItem = '<div name="issueItem" cit="' + item.Id + '" class="issue-plan-item"><div class="h5 margin-sm pull-left">' + item.Name + '</div><div class="pull-right label label-primary label-as-badge">' + item.IssuesCount + '</div></div>';
                            $cont.append(htmlItem);
                        }
                    } else {
                        $cont.append('пусто');
                    }
                    hideSpinner($cont);
                }
                ,
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert(xhr.responseText);
                    hideSpinner($cont);
                }
            });
        }
    }

    function loadCityAddressList(e) {
        if ($(e.target).attr('name') != 'issueItemCity') {
            e.preventDefault();
            return;
        }

        var $obj = $(this);
        var cid = $obj.attr('cid');
        var startDate = $obj.attr('sdt');
        var endDate = $obj.attr('edt');
        var engSid = getEngeneerSelectedValues();
        var $cont = $('[name="issueItemCityAddress"]', $obj);
        $cont.html('');
        showSpinnerPrepend($cont);
        
        $.ajax({
            url: '@Url.Action("GetPlanServiceIssueAddressList")',
            method: 'POST',
            data: { startDate: startDate, endDate: endDate, engeneerSid: engSid, idCity:cid },
            success: function (data) {
                
                if (data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        var item = data[i];
                        var htmlItem = '<div name="issueItemAddress" sdt="' + startDate + '" edt="' + endDate + '" cid="' + cid + '" aid="' + item.Name + '" class="issue-plan-item address"><div class="h5 margin-sm pull-left">' + item.Name + '</div><div class="pull-right label label-primary label-as-badge">' + item.IssuesCount + '</div><div name="issueItemAddressDevice"></div></div>';
                        $cont.append(htmlItem);
                    }
                    $('[name="issueItemAddress"]', $cont).click(loadAddressDeviceList);
                } else {
                    $cont.append('пусто');
                }
                hideSpinner($cont);
            }
                ,
            error: function (xhr, ajaxOptions, thrownError) {
                //alert(xhr.responseText);
                hideSpinner($cont);
            }
        });
        e.preventDefault();
    }
    

    function loadAddressDeviceList(e) {
        var $obj = $(this);
        var cid = $obj.attr('cid');
        var aid = $obj.attr('aid');
        var startDate = $obj.attr('sdt');
        var endDate = $obj.attr('edt');
        var engSid = getEngeneerSelectedValues();
        var $cont = $('[name="issueItemAddressDevice"]', $obj);
        $cont.html('');
        showSpinnerPrepend($cont);

        $.ajax({
            url: '@Url.Action("GetPlanServiceIssueDeviceIssueList")',
            method: 'POST',
            data: { startDate: startDate, endDate: endDate, engeneerSid: engSid, idCity: cid, address: aid },
            success: function (data) {
                if (data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        var item = data[i];
                        var htmlItem = '<div name="issueItemDevice" sdt="' + startDate + '" edt="' + endDate + '" cid="' + cid + '" aid="' + item.Id + '" class="issue-plan-item device"><div class="h5 margin-sm pull-left">' + item.Name + '</div><div class="pull-right label label-primary label-as-badge">' + item.IssuesCount + '</div></div>';
                        $cont.append(htmlItem);
                    }
                } else {
                    $cont.append('пусто');
                }
                hideSpinner($cont);
            }
                ,
            error: function (xhr, ajaxOptions, thrownError) {
                //alert(xhr.responseText);
                hideSpinner($cont);
            }
        });
    }
</script>
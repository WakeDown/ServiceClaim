@using ServiceClaim.Models

@{
    ViewBag.Title = "Планирование поездки";
    Layout = "~/Views/Shared/_Layout.cshtml";
    DateTime date = DateTime.Parse(Request.QueryString["date"]);
    string dateStr = date.ToString("yyyy-MM-dd");
    int year = date.Year;
    int month = date.Month;
    int day = date.Day;
    var periodList = ServiceIssuePlan.GetPeriodMonthList(year, month);
}

@*<div class="row pad-b-md navbar-fixed-top sub-menu-fixed-top bg-primary">
    <div class="col-lg-9">
        <div class="row">
            <div class="col-lg-4">
                <div id="selectedIssueName" class="form-control">
                    выберите заявку
                </div>
                <div>
                    @Html.DropDownList("selPeriod", new SelectList(periodList, "ListValue", "ListName"), new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-8">
                
            </div>
        </div>
    </div>
</div>*@
<div >
    @*class="sub-menu-fixed-top-padding"*@
    <div class="row">
        <div class="col-lg-3">
            @*@using (Html.BeginForm("Planing", "ServiceIssuePlan", FormMethod.Post))
            {*@
                <div id="calendar"></div>
                <input id="date" name="date" type="hidden" value="@String.Format("{0:yyyy-MM-dd}", date)"/>
                <p>
                    <select id="engeneersSelect" name="engeneersSelect" class="form-control" multiple="multiple">
                        @foreach (var eng in ServiceIssue.GetEngeneerList())
                        {
                            <option value="@eng.Key" @(TempData["serviceEngeneerSid"] != null && TempData["serviceEngeneerSid"].ToString().Contains(eng.Key) ? "selected=\"selected\"" : "")>@eng.Value</option>
                        }
                    </select>
                    <a class="btn btn-info" id="search"><i class="fa fa-search"></i></a>
                </p>
            @*}*@
            <span>
                <input type="radio" name="issuePlaningState" value="all" />&nbsp;все
                <input type="radio" name="issuePlaningState" value="planed" />&nbsp;запланир
                <input type="radio" name="issuePlaningState" value="notplaned" checked="checked" />&nbsp;незапланир
            </span>
            <div id="planingIssueList" class="planing-sel-list">
                @*@foreach (ServiceIssuePlaningItem city in ViewBag.IssueCityList)
                {
                    <a class="async-sel row nomargin nopadding" href="#!" name="city" cid="@city.Id" data-toggle="tooltip" title="@city.Name">
                        <div class="issues-count col-lg-2"><span class="pull-right">@city.IssuesCount</span></div>
                        <div class="col-lg-10"><input type="checkbox" name="all-city" id="all-cit-@city.Id" issueids="@city.IssuesIdList"/>&nbsp;@city.ShortName</div>
                    </a>
                    <div name="addressContainer" cid="@city.Id" class="pad-1"></div>
                }*@
            </div>
        </div>
        <div class="col-lg-9">
            <p>
                <span class="label label-info">выбрано заявок - <span id="selIssueIdsCount" class="label-badge">0</span></span>&nbsp;<button id="btnIssuePlanSave" class="btn btn-success btn-xs">добавить в план</button>
                <input id="selPeriod" name="selPeriod" type="hidden" value="" />
            </p>
            <div id="issueContainer">
                @Html.Partial("PeriodWeekView", periodList)
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script type="text/javascript">
        $(function() {
            $('[name="issuePlaningState"]').click(fillCityList);
            $('#calendar').datepicker({
                language: "ru",
                todayHighlight: true
            }).on('changeDate', function(e) {
                $('#date').val(e.format('yyyy-mm-dd'));
            });
            $('#calendar').on('changeMonth', function(e) {
                var curDate = new Date(e.date);
                var curDateStr = (curDate.getYear() + 1900).toString() + '-' + (curDate.getMonth() + 1).toString() + '-' + curDate.getDate().toString();
                $('#calendar').datepicker('update', curDate);
                $('#date').val(curDateStr);
            });
            var startDate = new Date(@year, @(month - 1), @day);
            $('#calendar').datepicker('update', startDate);
            $('#engeneersSelect').multiselect({
                includeSelectAllOption: true,
                selectAllText: 'все',
                selectAllValue: '',
                enableFiltering: true,
                nonSelectedText: 'выберите инженера(-ов)'
            });
            $('#btnIssuePlanSave').click(addSelectedIssues2Plan);
            fillCityList();
            $('#search').click(fillCityList);
        });

        function getEngeneerSelectedValues() {
            var list = $('#engeneersSelect :checked');
            
            var ids = [];
            for (var i=0; i < list.length; i++) {
                ids.push($(list[i]).val());
            }
            return ids;
        }

        function getPlanedState() {
            var planingState = $('[name="issuePlaningState"]:checked').val();
            var planed = planingState == 'planed' ? true : planingState == 'notplaned' ? false : null;
            return planed;
        }

        function fillCityList() {
            var $container = $('#planingIssueList');
            $container.html('');
            showSpinnerAfter($container, false);
            var date = new Date($('#date').val());
            var serviceEngeneerSid = getEngeneerSelectedValues();
            var planed = getPlanedState();
           
            $.ajax({
                url: '@Url.Action("GetCityList")',
                method: 'POST',
                data: { date: date.toDateString(), serviceEngeneerSid:serviceEngeneerSid, planed:planed },
                success: function(data) {
                    if (data.length) {
                        $container.html('');
                        for (var i = 0; i < data.length; i++) {
                            var city = data[i];
                            var cityItem = '<a class="async-sel row nomargin nopadding" href="#!" name="city" cid="'+city.Id+'" data-toggle="tooltip" title="'+city.Name+'"><div class="issues-count col-lg-2"><span class="pull-right">' +city.IssuesCount+'</span></div><div class="col-lg-10"><input type="checkbox" name="all-city" id="all-cit-'+city.Id+'" issueids="'+city.IssuesIdList+'"/>&nbsp;'+city.ShortName+'</div></a><div name="addressContainer" cid="'+city.Id+'" class="pad-1"></div>';
                            $container.append(cityItem);
                        }

                        $('[name="city"]', $container).click(fillAddressList);
                        $('[name="all-city"]', $container).click(setCheckedIssueIds);
                    }
                    hideSpinner();
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert(xhr.responseText);
                    hideSpinner();
                }
            });
        }

        function addSelectedIssues2Plan() {
                //var serviceIssueIdList = $('#selectedIssueName').attr('sid');

                if (issueIdsArr.length == 0) {
                    alert('Выберите заявку.');
                    return;
                }

                var periodStr = $('#selPeriod').val();
                if (periodStr == '') {
                    alert('Выберите период.');
                    return;
                }
                showSpinnerAppend($(this));
                $.ajax({
                    url: '@Url.Action("SaveServiceIssuePlan")',
                    method: 'POST',
                    data: { serviceIssueIdList: issueIdsArr, periodStr: periodStr },
                    success: function(data) {
                        if (!data.error) {
                            //appendServiceIssue(data);
                            updateSelectedPeriod();
                        } else {
                            alert(data.error);
                        }
                        hideSpinner($(this));
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(xhr.responseText);
                    }
                });
            }


        var issueIdsArr = [];

        function setCheckedIssueIds(e) {
            var issueids = $(this).attr('issueids');
            var arr = issueids.split(',');


            if ($(this).is(':checked')) {
                for (var i = 0; i < arr.length; i++) {
                    var index = issueIdsArr.indexOf(arr[i]);
                    if (index == -1) {
                        issueIdsArr.splice(issueIdsArr.length-1, 0, arr[i]);
                    }
                }
                //issueIdsArr = issueIdsArr.concat(arr);
            } else {
                for (var i = 0; i < arr.length; i++) {
                    var index = issueIdsArr.indexOf(arr[i]);
                    if (index > -1) {
                        issueIdsArr.splice(index, 1);
                    }
                }

            }
            $('#selIssueIdsCount').text(issueIdsArr.length);
            e.stopPropagation();
        }

        @*function fill() {
            var servEngChks = $('#engeneersSelect [type="checkbox"]');
            var selServEng = '@Request.QueryString[qsServEngName]';
            var selEnrArr = selServEng.split(',');

            for (var i = 0; i < selEnrArr.length; i++) {
                alert($(servEngChks).find('[value="' + selEnrArr[i] + '"]'));
                $(servEngChks).find('[value="' + selEnrArr[i] + '"]').prop('checked', true);
            }
        }*@

        @*function reloadWithParams() {
            var month = $('#month').attr('mthdate');
            var servEngVals = [];
            var servEng = $('#engeneersSelect :checked');
            for (var i = 0; i < servEng.length; i++) {
                servEngVals.push($(servEng[i]).val());
            }

            $.post({
                type: "POST",
                url: '@Url.Action("Planing")',
                data: { month:month, serviceEngeneerSid: servEngVals}
            });
        }*@

        function appendServiceIssue(data) {
            $.ajax({
                url: '@Url.Action("GetServiceIssuePlanItem")?id=' + data.Id,
                method: 'GET',
                success: function(html) {
                    var $issueItem = $(html);
                    if ($issueItem.attr('name') === 'issueItem') {
                        $($issueItem).addClass('updated-issue-item');
                    } else {
                        $('[name="issueItem"]', $issueItem).addClass('updated-issue-item');
                    }
                    var $col = $('#periodContainer-' + data.IdValue.toString());
                    $col.prepend($issueItem);

                    //var $tr = $("tr#taskClaim-" + id);
                    //$tr.addClass('updated--issue-item');
                    //initTaskList($tr);
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert(xhr.responseText);
                }
            });
        }

        function fillAddressList() {
            showSpinnerAfter(this, false);
            var cid = $(this).attr('cid');
            var date = new Date($('#date').val());
            var planed = getPlanedState();
            $.ajax({
                url: '@Url.Action("GetAddressList")',
                method: 'POST',
                data: { date: date.toDateString(), idCity: cid, planed:planed },
                success: function(data) {

                    if (data.length) {
                        var $container = $('[name="addressContainer"][cid="' + cid + '"]');
                        $container.html('');
                        for (var i = 0; i < data.length; i++) {
                            var address = data[i];
                            var addresItem = '<a href="#!" class="async-sel row nomargin nopadding" name="address" cid="' + cid + '" aid="' + address.Name + '"><div class="issues-count col-lg-2"><span class="pull-right">' + address.IssuesCount + '</span></div><div class="col-lg-10"><input type="checkbox" name="all-addr" id="all-addr-' + address.Name.replace(' ', '') + '" issueids="' + address.IssuesIdList + '" />&nbsp;' + address.Name + '</div></a><div name="clientContainer"  cid="' + cid + '" aid="' + address.Name + '"  class="pad-2"></div>';
                            $container.append(addresItem);
                        }

                        $('[name="address"]', $container).click(fillClientList);
                        $('[name="all-addr"]', $container).click(setCheckedIssueIds);
                    }
                    hideSpinner();
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert(xhr.responseText);
                    hideSpinner();
                }
            });
        }

        function fillClientList() {
            showSpinnerAfter(this, false);
            var cid = $(this).attr('cid');
            var aid = $(this).attr('aid');
            var date = new Date($('#date').val());
            var planed = getPlanedState();
            $.ajax({
                url: '@Url.Action("GetClientList")',
                method: 'POST',
                data: { date: date.toDateString(), idCity: cid, address: aid, planed:planed },
                success: function(data) {
                    if (data.length) {
                        var $container = $('[name="clientContainer"][cid="' + cid + '"][aid="' + aid + '"]');
                        $container.html('');
                        for (var i = 0; i < data.length; i++) {
                            var client = data[i];
                            var clientItem = '<a href="#!" class="async-sel row nomargin nopadding" name="client" cid="' + cid + '" aid="' + aid + '" clid="' + client.Id + '"><div class="issues-count col-lg-2"><span class="pull-right">' + client.IssuesCount + '</span></div><div class="col-lg-10"><input type="checkbox" name="all-cl" id="all-cl-' + client.Id + '" issueids="' + client.IssuesIdList + '" />&nbsp;' + client.Name + '</div></a><div name="deviceContainer"  cid="' + cid + '" aid="' + aid + '"  clid="' + client.Id + '" class="pad-3"></div>';
                            $container.append(clientItem);
                        }

                        $('[name="client"]', $container).click(fillDeviceList);
                        $('[name="all-cl"]', $container).click(setCheckedIssueIds);
                    }
                    hideSpinner();
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert(xhr.responseText);
                    hideSpinner();
                }
            });
        }

        function fillDeviceList() {
            showSpinnerAfter(this, false);
            var cid = $(this).attr('cid');
            var aid = $(this).attr('aid');
            var clid = $(this).attr('clid');
            var date = new Date($('#date').val());
            var planed = getPlanedState();
            $.ajax({
                url: '@Url.Action("GetDeviceIssueList")',
                method: 'POST',
                data: { date: date.toDateString(), idCity: cid, address: aid, idClient: clid, planed:planed },
                success: function(data) {
                    if (data.length) {
                        var $container = $('[name="deviceContainer"][cid="' + cid + '"][aid="' + aid + '"][clid="' + clid + '"]');
                        $container.html('');
                        for (var i = 0; i < data.length; i++) {
                            var deviceIssue = data[i];
                            var deviceItem = '<a href="#!" class="async-sel row nomargin nopadding" name="deviceIssue" cid="' + cid + '" aid="' + aid + '" clid="' + clid + '" sid="' + deviceIssue.Id + '" dname="' + deviceIssue.Name + '"><div class="issues-count col-lg-2"><span class="pull-right">' + deviceIssue.IssuesCount + '</span></div><div class="col-lg-10"><input type="checkbox" name="all-dev" id="all-dev-' + deviceIssue.Id + '" issueids="' + deviceIssue.Id + '" />&nbsp;' + deviceIssue.Name + '</div></a>';
                            $container.append(deviceItem);
                        }

                        $('[name="deviceIssue"]', $container).click(setIssue);
                        $('[name="all-dev"]', $container).click(setCheckedIssueIds);
                    }
                    hideSpinner();
                },
                error: function(data) {
                    alert(data.error);
                    hideSpinner();
                }
            });
        }

        function setIssue() {
            showSpinner(this, false);
            var $issueNameInput = $('#selectedIssueName');

            $issueNameInput.text('выберите заявку');
            //var cid = $(this).attr('cid');
            //var aid = $(this).attr('aid');
            //var clid = $(this).attr('clid');
            //var did = $(this).attr('did');
            var dname = $(this).attr('dname');
            var sid = $(this).attr('sid'); //serviceClaimId

            var id = 'sid-' + sid + '-tid-1';
            var $elem = $('#' + id);

            if ($elem.length > 0) {
                $elem.removeClass('accent-issue-item');
                scroll_if_anchor('#' + id);
                //window.location.hash = id;
                $elem.addClass('accent-issue-item');
            } else {
                $issueNameInput.text(dname);
                $issueNameInput.attr('sid', sid);
                $issueNameInput.removeClass('updated-input');
                setTimeout(function() {
                    $issueNameInput.addClass('updated-input');
                }, 100);
            }
            //$issueNameInput.attr('cid', cid);
            //$issueNameInput.attr('aid', aid);
            //$issueNameInput.attr('clid', clid);
            //$issueNameInput.attr('did', did);

            hideSpinner();
        }

        function scroll_if_anchor(href) {
            href = typeof (href) == "string" ? href : $(this).attr("href");

            // You could easily calculate this dynamically if you prefer
            var fromTop = 150;

            // If our Href points to a valid, non-empty anchor, and is on the same page (e.g. #foo)
            // Legacy jQuery and IE7 may have issues: http://stackoverflow.com/q/1593174
            if (href.indexOf("#") == 0) {
                var $target = $(href);

                // Older browser without pushState might flicker here, as they momentarily
                // jump to the wrong position (IE < 10)
                if ($target.length) {
                    $('html, body').animate({ scrollTop: $target.offset().top - fromTop });
                    if (history && "pushState" in history) {
                        history.pushState({}, document.title, window.location.pathname + href);
                        return false;
                    }
                }
            }
        }

    </script>
}
@using System.Linq
@using System.ServiceModel.Configuration
@using ServiceClaim.Models;
@using ServiceClaim.Objects
@{
    ViewBag.Title = "Список заявок";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //var filterStates = ClaimState.GetFilterList();


}

<p>
    <div class="row">
        <div class="col-lg-2 col-sm-12 col-xs-12 hidden-sm hidden-xs">
            <div class="pull-left">
                <nav>
                    <ul class="pagination nomargin pages">
                    </ul>
                </nav>
            </div>
        </div>
        <div class="col-lg-8 col-sm-12 col-xs-12">
            <div id="stateGroupFilter"></div>
        </div>
        <div class="col-sm-6 col-xs-6 hidden-md hidden-lg">
            <div class="pull-left">
                <nav>
                    <ul class="pagination nomargin pages"></ul>
                </nav>
            </div>
        </div>
        <div class="col-lg-2 col-sm-6 col-xs-6">
            <div>
                <div class="text-right">
                    <nav>
                        <ul class="pagination pagesize nomargin">
                            @*<li>записей на странице</li>*@
                            <li><a name="pageSize" value="30" href="#!" class="btn btn-default btn-sm selected">30</a></li>
                            <li><a name="pageSize" value="100" href="#!" class="btn btn-default btn-sm">100</a></li>
                            <li><a name="pageSize" value="300" href="#!" class="btn btn-default btn-sm">300</a></li>
                        </ul>
                    </nav>
                </div>
            </div>
            <div class="text-right">
                <small>
                    обновлено в
                    <span id="lastUpdateTime" class="text-danger text-center"></span>
                </small>
            </div>
        </div>
    </div>

    <table id="claimList" class="table table-bordered sel-list bg-white">
        <tr class="bg-primary">
            <th class="row-mark"></th>
            <th class="min-width">
                <input id="numFilter" type="text" placeholder="№" class="form-control input-xs width-40-xs width-70-md width-70-lg" />
            </th>
            <th class="min-width hidden-sm hidden-xs"><input id="clientSdNumFilter" type="text" placeholder="№ SD клиента" class="form-control input-xs" style="min-width: 85px;" /></th>
            <th>
                <select id="clientFilter" class="form-control input-xs"></select>
            </th>
            <th class="hidden-sm hidden-xs"><input id="addressFilter" type="text" placeholder="Адрес" class="form-control input-xs" /></th>
            <th class="width-25perc-lg width-40perc-sm"><input id="deviceFilter" type="text" placeholder="Аппарат" class="form-control input-xs" /></th>
            <th><input id="serialNumFilter" type="text" placeholder="S/N" class="form-control input-xs" /></th>
            @*<th>Последнее изменение</th>*@
            <th class="hidden-sm hidden-xs"></th>
            <th class="hidden-sm hidden-xs">Статус</th>
            @*<th>Время с момента создания</th>*@

            <th class="hidden-sm hidden-xs">Дата создания</th>
        </tr>
        <tbody id="claimContainer"></tbody>
    </table>
</p>
<div class="row">
    <div class="col-lg-12">
        <div class="pull-left">
            <nav>
                <ul class="pagination nomargin pages">
                    @*<li>
                            <a href="#" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>*@
                    @*<li><a href="#">1</a></li>
                        <li><a href="#">2</a></li>
                        <li><a href="#">3</a></li>
                        <li><a href="#">4</a></li>
                        <li><a href="#">5</a></li>*@
                    @*<li>
                            <a href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>*@
                </ul>
            </nav>
        </div>
        <div class="pull-right">
            <nav>
                <ul class="pagination pagesize nomargin">
                    @*<li>записей на странице</li>*@
                    <li><a name="pageSize" value="30" href="#!" class="btn btn-default btn-sm selected">30</a></li>
                    <li><a name="pageSize" value="100" href="#!" class="btn btn-default btn-sm">100</a></li>
                    <li><a name="pageSize" value="300" href="#!" class="btn btn-default btn-sm">300</a></li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@*<div class="row">
        <blockquote class="alert-danger pull-right">
            @if (Model.TotalCount > 100)
            {
                <button name="displayRows" value="100" class="btn btn-link">показать 100</button>
            }
            @if (Model.TotalCount > 300)
            {
                <button name="displayRows" value="300" class="btn btn-link">показать 300</button>
            }
            @if (Model.TotalCount > 1000)
            {
                <button name="displayRows" value="1000" class="btn btn-link">показать 1000</button>
            }
            <button name="displayRows" value="@Model.TotalCount" class="btn btn-link">показать все</button>
            показаны @Model.List.Count() из @Model.TotalCount
        </blockquote>
    </div>*@

<script type="text/javascript">

    function loadClientFilter() {
        var $elem = $('#clientFilter');
        $.ajax({
            url: '@Url.Action("GetClientFilterList")',
            method: 'POST',
            success: function (data) {
                $elem.find('option').remove();
                if (data.length > 0) {
                    var option = '<option value="">--все клиенты--</option>';
                    $elem.append(option);
                    for (var i = 0; i < data.length; i++) {
                        var item = data[i];
                        option = '<option value="' + item.Id + '">' + item.Name + '</option>';
                        $elem.append(option);
                    }
                }
            }
        });
    }

    function fillClaimList(data) {
        removeRowsAndShowSpinnerOnTable();
        var $cont = $('#claimContainer');
        if (data.List.length > 0) {
            for (var i = 0; i < data.List.length; i++) {
                var item = data.List[i];
                var $trItem = '<tr id="claim-' + item.Id + '" claimid="' + item.Id + '"><th class="row-mark" style="background-color: #' + (item.State != null ? item.State.BorderColor : '') + '"></th><th class="valign-middle text-center"></div>' + item.Id + '</th><th class="valign-middle hidden-sm hidden-xs text-center">' + (item.ClientSdNum != null ? item.ClientSdNum : '') + '</th><td class="valign-middle">' + (item.Contractor != null ? item.Contractor.FullName : '') + '</td><td class="hidden-sm hidden-xs">' + (item != null ? (item.CityName != null ? item.CityName : '') + (item.Address != null ? '<br />' + item.Address : '') : '') + (item.ContactName != null ? '<br /><b>Контакт:</b> ' + item.ContactName : '') + (item.ContactPhone != null ? '<br /><b>Телефон:</b> ' + item.ContactPhone : '') + '</td><td class="valign-middle">'
                    + (item.DeviceCollective != null && item.DeviceCollective == true ? 'массовая заявка' : (item.DeviceUnknown != null && item.DeviceUnknown == true ? 'аппарат неизвестен' : (item.Device != null && item.Device.FullName != null ? item.Device.FullName : '')))
                    + (item.Descr != null ? '<br /><b>Описание:</b> ' + item.Descr : '') + '</td><td class="valign-middle">' + (item.Device != null && item.Device.SerialNum != null ? item.Device.SerialNum : '') + '</td><td class="hidden-sm hidden-xs">' +
                    '<div class="text-nowrap">' +
                        '<span class="small">' +
                        '<span class="bold monospace">МСЦ:</span>&nbsp;' + (item.Manager != null && item.Manager.DisplayName != null ? item.Manager.DisplayName : '') + '</span>' +
                    '</div>' +
                    '<div class="text-nowrap"><span class="small"><span class="bold monospace">&nbsp;СА:</span>&nbsp;' + (item.Admin != null && item.Admin.DisplayName != null ? item.Admin.DisplayName : '') + '</span></div>' +
                    '<div class="text-nowrap"><span class="small"><span class="bold monospace text-nowrap">СТП:</span>&nbsp;' + (item.Tech != null && item.Tech.DisplayName != null ? item.Tech.DisplayName : '') + '</span></div>' +
                    '<div class="text-nowrap"><span class="small"><span class="bold monospace">&nbsp;СИ:</span>&nbsp;' + (item.Engeneer != null && item.Engeneer.DisplayName != null ? item.Engeneer.DisplayName : '') + '</span></div>' +
                    '<div class="text-nowrap"><span class="small"><span class="bold monospace">МРК:</span>&nbsp;' + (item.ClientManager != null && item.ClientManager.DisplayName != null ? item.ClientManager.DisplayName : '') + '</span></div>' +
                    '</td>' +
                    '<td style="background-color: #' + (item.State != null ? item.State.BackgroundColor : '') + '; color: #' + (item.State != null ? item.State.ForegroundColor : '') + '" class="valign-middle hidden-sm hidden-xs">' + (item.State != null ? item.State.Name : '') + '<div class="small text-nowrap">' + item.DateStateChangeStr + '-' + (item.Changer != null ? item.Changer.DisplayName : '') + '</div></td><td class="valign-middle hidden-sm hidden-xs">' + item.DateCreateStr + '</td></tr>';

                $cont.append($trItem);
            }
            initListButtons();
        } else {
            $cont.append('<tr><td>пусто</td></tr>');
        }
        hideSpinner($cont);
    }

    $('[name="displayRows"]').click(function () {
        var rows = $(this).attr('value');
        reload(rows);
    });

    function reload(topRows) {
        var client = $('#clientFilter').val();
        var url = '@Url.Action("List")?client=' + client + '&state=@Request.QueryString["state"]' + '&topRows=' + topRows;
        window.location = url;
    }

    function updateListItem(claimId) {
        $.ajax({
            url: '@Url.Action("GetListItem")',
            method: 'POST',
            data: { claimId: claimId },
            success: function (html) {
                if (html != '') {
                    $('#claim-' + claimId).replaceWith(html);
                    var $tr = $('#claim-' + claimId);
                    $tr.addClass('updated');
                    initListButtons($tr);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                BootstrapDialog.show({
                    type: 'type-danger',
                    title: 'Ошибка!',
                    message: xhr.responseText
                });
            }
        });
    }

    function initListButtons($container) {
        if ($container == null) {
            $('tr[claimid]', $('#claimList')).click(function () {
                window.location = '@Url.Action("Index")/' + $(this).attr('claimid');
            });
            $container = $('#claimList');
        } else {
            $container.click(function () {
                window.location = '@Url.Action("Index")/' + $(this).attr('claimid');
            });
        }

        $('#StateEngOutWait', $container).click(function (e) {
            var $btn = $(this);
            var clid = $btn.attr('clid');
            $.ajax({
                url: '@Url.Action("StateEngOutWaitAsync", "Claim")',
                method: 'POST',
                data: { claimId: clid },
                success: function (data) {
                    showSpinnerAppend($btn);
                    updateListItem(clid);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    BootstrapDialog.show({
                        type: 'type-danger',
                        title: 'Ошибка!',
                        message: xhr.responseText
                    });
                }
            });
            e.stopPropagation();
        });
        $('#SetServEngOnWork', $container).click(function (e) {
            var $btn = $(this);
            var clid = $btn.attr('clid');
            $.ajax({
                url: '@Url.Action("SetServEngOnWorkAsync", "Claim")',
                method: 'POST',
                data: { claimId: clid },
                success: function (data) {
                    showSpinnerAppend($btn);
                    updateListItem(clid);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    BootstrapDialog.show({
                        type: 'type-danger',
                        title: 'Ошибка!',
                        message: xhr.responseText
                    });
                }
            });
            e.stopPropagation();
        });

        if ($container == null) {
            $('tr[claimid]', $container).click(function () {
                window.open('@Url.Action("Index")/' + $(this).attr('claimid'));
            });
        }
    }

    function getFilterValues() {
        var num = $('#numFilter').val();
        var idClient = $('#clientFilter').val();
        var clSdNum = $('#clientSdNumFilter').val();
        var devName = $('#deviceFilter').val();
        var serial = $('#serialNumFilter').val();
        var topRows = $('[name="pageSize"].selected').attr('value');
        var selPage = 1;

        if ($('[name="page"].active a').length > 0) {
            selPage = $('[name="page"].active a').attr('value');
        }

        var $grpStateElem = $('[name="stateGroupFilterItem"].selected');
        var grpState = [];
        if ($grpStateElem.length > 0) {
            for (var i = 0; i < $grpStateElem.length; i++) {
                var val = $($grpStateElem[i]).attr('value');
                grpState.push(val);
            }
        }
        var address = $('#addressFilter').val();

        var filter = { num: num, idClient: idClient, clSdNum: clSdNum, devName: devName, serial: serial, address: address, topRows: topRows, selPage: selPage, grpState: grpState };
        return filter;
    }

    function loadClaimList(reloadStateGroupFilter) {
        //var num = $('#numFilter').val();
        //var idClient = $('#clientFilter').val();
        //var clSdNum = $('#clientSdNumFilter').val();
        //var devName = $('#deviceFilter').val();
        //var serial = $('#serialNumFilter').val();
        //var topRows = $('[name="pageSize"].selected').attr('value');
        //var selPage = 1;

        //if ($('[name="page"].active a').length > 0) {
        //    selPage = $('[name="page"].active a').attr('value');
        //}

        //var $grpStateElem = $('[name="stateGroupFilterItem"].selected');
        //var grpState = [];
        //if ($grpStateElem.length > 0) {
        //    for (var i = 0; i < $grpStateElem.length; i++) {
        //        var val = $($grpStateElem[i]).attr('value');
        //        grpState.push(val);
        //    }
        //}
        //var address = $('#addressFilter').val();

        var filter = getFilterValues();

        $.ajax({
            url: '@Url.Action("GetClaimList")',
            method: 'POST',
            data: { idClient: filter.idClient, claimId: filter.num, clientSdNum: filter.clSdNum, deviceName: filter.devName, serialNum: filter.serial, topRows: filter.topRows, pageNum: filter.selPage, groupStateList: filter.grpState, address: filter.address },
            success: function (data) {
                fillClaimList(data);
                writeLastupdateTime();
                //$('#lastUpdateTime').attr('t', 0);
                fillPager(filter.topRows, data.TotalCount, filter.selPage);
            }
        });

        if (reloadStateGroupFilter == true) loadStateGroupFilter();
    }

    function fillPager(topRows, totalCount, selPage) {
        var pages = Math.floor(totalCount / topRows);
        if ((totalCount % topRows) > 0) pages++;
        $('.pagination.pages li').remove();
        for (var i = 0; i < pages; i++) {
            var btn = '<li name="page" value="' + (i + 1) + '" class="' + (selPage == i + 1 ? 'active' : '') + '"><a value="' + (i + 1) + '" href="#!">' + (i + 1) + '</a></li>';
            $('.pagination.pages').append(btn);
        }
        $('[name="page"] a').click(function () {
            $('[name="page"].active').removeClass('active');
            $('[name="page"][value="' + $(this).attr('value') + '"]').addClass('active');
            removeRowsAndShowSpinnerOnTable();
            loadClaimList();
        });
    }

    function writeLastupdateTime() {
        $('#lastUpdateTime').attr('dt', Date.now());
        //alert(new Date(Date.now()).toLocaleTimeString());
        var lastTime = new Date(Date.now()).toLocaleTimeString();
        $('#lastUpdateTime').html(lastTime);
    }

    //function lastUpdateTimer() {
    //    var last = $('#lastUpdateTime').attr('t');
    //    last = parseInt(last) + 1;
    //    $('#lastUpdateTime').attr('t', last);
    //        $('#lastUpdateTime').html(last + ' сек. назад');
    //}

    function removeRowsAndShowSpinnerOnTable() {
        var $cont = $('#claimContainer');
        $cont.find('tr').remove();
        showSpinnerAppend($cont);
    }

    function loadStateGroupFilter() {
        var filter = getFilterValues();

        $.ajax({
            url: '@Url.Action("GetStateGroupFilterList")',
            method: 'POST',
            data: { idClient: filter.idClient, claimId: filter.num, clientSdNum: filter.clSdNum, deviceName: filter.devName, serialNum: filter.serial, topRows: filter.topRows, pageNum: filter.selPage, groupStateList: filter.grpState, address: filter.address },
            success: function(data) {
                var $cont = $('#stateGroupFilter');
                $cont.find('ul').remove();
                var $ul = $('<ul class="list-inline"></div>');
                if (data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        var item = data[i];
                        //var li = '<div class="col-sm-6 col-xs-6 col-lg-2"><a name="stateGroupFilterItem" value="' + item.Id + '" class="btn btn-block state-group-filter-item text-sm" style="background-color: #' + item.BackgroundColor + '; color: #' + item.ForegroundColor + '"><span class="sel-mark text-success"><i class="fa fa-check-circle"></i></span><span class="badge">' + item.ClaimCount + '</span>&nbsp;' + item.Name + '&nbsp;</a></div>';
                        var li = '<li><a name="stateGroupFilterItem" value="' + item.Id + '" class="btn btn-block state-group-filter-item text-sm" style="background-color: #' + item.BackgroundColor + '; color: #' + item.ForegroundColor + '; border-color: #' + (item.BorderColor == null ? 'e3e3e3' : item.BorderColor) + '; border-width: 1px; border-style: solid;"><span class="sel-mark text-success"><i class="fa fa-check-circle"></i></span><span class="badge">' + item.ClaimCount + '</span>&nbsp;' + item.Name + '&nbsp;</a></div>';
                        $ul.append(li);
                    }
                    $cont.append($ul);
                    $('[name="stateGroupFilterItem"]').click(function () {
                        $(this).toggleClass('selected');
                        removeRowsAndShowSpinnerOnTable();
                        loadClaimList();
                    });
                }
            }
        });
    }

    $(function () {
        loadClientFilter();
        loadStateGroupFilter();
    });

    $(document).ready(function () {
        var $cont = $('#claimContainer');
        $cont.find('tr').remove();
        showSpinnerAppend($('#claimContainer'));
        loadClaimList();
        //window.location.hash = 'claimList';
        $('#clientFilter').change(function () {
            removeRowsAndShowSpinnerOnTable();
            loadClaimList(true);
        });
        $('#numFilter').keypress(function (e) {
            if (e.keyCode == 13) {
                removeRowsAndShowSpinnerOnTable();
                loadClaimList(true);
            }
        });
        $('#clientSdNumFilter').keypress(function (e) {
            if (e.keyCode == 13) {
                removeRowsAndShowSpinnerOnTable();
                loadClaimList(true);
            }
        });
        $('#deviceFilter').keypress(function (e) {
            if (e.keyCode == 13) {
                removeRowsAndShowSpinnerOnTable();
                loadClaimList(true);
            }
        });
        $('#serialNumFilter').keypress(function (e) {
            if (e.keyCode == 13) {
                removeRowsAndShowSpinnerOnTable();
                loadClaimList(true);
            }
        });
        $('#addressFilter').keypress(function (e) {
            if (e.keyCode == 13) {
                removeRowsAndShowSpinnerOnTable();
                loadClaimList(true);
            }
        }); 
        $('[name="pageSize"]').click(function () {
            $('[name="pageSize"].selected').removeClass('selected');
            $('[name="pageSize"][value="' + $(this).attr('value') + '"]').addClass('selected');
            removeRowsAndShowSpinnerOnTable();
            loadClaimList(true);
        });
        setInterval(function () { loadClaimList(); }, 30000);
        //setInterval(lastUpdateTimer, 1000);
    });
</script>


